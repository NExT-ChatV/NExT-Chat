{
    "summary": "This code sets up the training arguments, model arguments, and data arguments for a multi-predict evaluation of a NextChat model. It specifies output directory, disables training and evaluation, enables multi-predict mode, uses BF16 for faster inference, and defines the model's architecture and dataset configurations.",
    "details": [
        {
            "comment": "This code sets up the training arguments, model arguments, and data arguments for a multi-predict evaluation of a NextChat model. It specifies output directory, disables training and evaluation, enables multi-predict mode, uses BF16 for faster inference, and defines the model's architecture and dataset configurations.",
            "location": "\"/media/root/Prima/works/NExT-Chat/docs/src/config/nextchat_eval_multi_rec.py\":0-45",
            "content": "_base_ = ['_base_/dataset/DEFAULT_TEST_DATASET.py', '_base_/model/nextchat.py', '_base_/train/eval.py']\ntraining_args = dict(\n    output_dir='./exp/{{fileBasenameNoExtension}}',\n    do_train=False,\n    do_eval=False,\n    do_predict=False,\n    do_multi_predict=True,\n    fp16=False,\n    fp16_full_eval=False,\n    bf16=True,\n    bf16_full_eval=True,\n    per_device_eval_batch_size=8,\n)\nmodel_args = dict(\n    model_name_or_path=None,\n    conv_args=dict(\n        conv_template='vicuna_v1.1',\n        transforms=dict(type='Expand2square'),\n        tokenize_kwargs=dict(truncation_size=2048),\n    ),\n)\ndata_args = dict(\n    train=None,\n    validation=None,\n    test=None,\n    multitest={k: {'cfg': v, 'compute_metric': dict(type='RECComputeMetrics')} for k, v in _base_.DEFAULT_TEST_REC_VARIANT.items()},\n    compute_metric=None,\n    # padding collator kwargs\n    collator_kwargs=dict(\n        padding=True,\n        max_length=1024,\n    ),\n    # generate config\n    gen_kwargs=dict(\n        max_new_tokens=1024,\n        num_beams=1,\n    ),\n)"
        }
    ]
}